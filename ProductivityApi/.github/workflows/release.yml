name: Release

on:
  push:
    tags:
      - 'v*'

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --configuration Release --no-restore

    - name: Run tests
      run: dotnet test --configuration Release --no-build

    - name: Publish application
      run: |
        dotnet publish src/ProductivityApi/ProductivityApi.csproj \
          --configuration Release \
          --output ./publish \
          --no-restore \
          --no-build

    - name: Create release archive
      run: |
        cd publish
        tar -czf ../ProductivityApi-${{ github.ref_name }}.tar.gz *

    - name: Generate changelog
      id: changelog
      run: |
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## Changes in this Release
          ${{ steps.changelog.outputs.CHANGELOG }}

          ## Docker Image
          ```bash
          docker pull ${{ secrets.DOCKER_USERNAME }}/productivityapi:${{ github.ref_name }}
          ```
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ProductivityApi-${{ github.ref_name }}.tar.gz
        asset_name: ProductivityApi-${{ github.ref_name }}.tar.gz
        asset_content_type: application/gzip

  docker-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push release Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/productivityapi:${{ github.ref_name }}
          ${{ secrets.DOCKER_USERNAME }}/productivityapi:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
